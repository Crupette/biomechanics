plugins {
	id 'fabric-loom' version '0.4-SNAPSHOT'
	id 'maven-publish'
	id 'com.matthewprenger.cursegradle' version '1.4.0'
	id 'com.novoda.build-properties' version '0.4.1'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

buildProperties {
	secrets {
		using project.file('secret.properties')
	}
}

minecraft {

}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"

	modImplementation "io.github.cottonmc:cotton-resources:${project.cotton_resources_version}"
	include "io.github.cottonmc:cotton-resources:${project.cotton_resources_version}"

	modRuntime "io.github.prospector:modmenu:1.12.1+build.15"

	//modImplementation "vazkii.patchouli:Patchouli_1.16-fabric:1.16-35.10-FABRIC:api"
	modImplementation "vazkii.patchouli:Patchouli_1.16-fabric:1.16-35.10-FABRIC"
	include "vazkii.patchouli:Patchouli_1.16-fabric:1.16-35.10-FABRIC"
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

curseforge {
	if(project.file('secret.properties').exists()) {
		apiKey = buildProperties.secrets['curse_api_key'].string
	}else{
		apiKey = ''
	}
	project {
		id = '391532'
		changelog = project.changelog
		releaseType = 'release'
		addGameVersion '1.16'
		addGameVersion 'Java 8'
		addGameVersion 'Fabric'
		relations {
			requiredDependency 'fabric-api'
		}

		mainArtifact(file("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}.jar")) {
			displayName = "v${project.version}-${project.minecraft_version}"
		}
		addArtifact(file("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}-sources.jar")) {
			displayName = "v${project.version}-${project.minecraft_version} sources"
		}

		afterEvaluate {
			uploadTask.dependsOn("remapJar")
			uploadTask.dependsOn("sourcesJar")
		}
	}
	options {
		forgeGradleIntegration = false
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}.jar"){
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}

allprojects {
	repositories {
		maven { url 'http://server.bbkr.space:8081/artifactory/libs-release' }
		maven { url 'https://maven.blamejared.com' }
		maven { url 'https://jitpack.io' }
	}
}